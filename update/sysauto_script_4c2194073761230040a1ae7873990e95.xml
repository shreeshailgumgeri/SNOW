<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sysauto_script">
    <sysauto_script action="INSERT_OR_UPDATE">
        <active>true</active>
        <condition/>
        <conditional>false</conditional>
        <name>test_server_script</name>
        <run_as display_value="System Administrator">6816f79cc0a8016401c5a33be04be441</run_as>
        <run_as_tz/>
        <run_dayofmonth>1</run_dayofmonth>
        <run_dayofweek>1</run_dayofweek>
        <run_period/>
        <run_start>2018-11-07 17:06:56</run_start>
        <run_time>1970-01-01 08:00:00</run_time>
        <run_type>on_demand</run_type>
        <script><![CDATA[var f5App = new f5AppHelper();

var gr = new GlideRecord(f5App.applicationTable);
gr.addQuery('number', "APP0001089");
gr.query();
gr.next();
var number = gr.getValue('number');
var as3Definition = gr.getValue('as3_declaration');
var business_unit = gr.getValue('business_unit');

var as3Declaration = f5App.getAS3TmplParent();
var appList = f5App.getApps(business_unit);

// Replace the Tenant template expression with record's business unit
var re = new RegExp("{{\w*tenant\w*}}");
as3Declaration = as3Declaration.replace(re, business_unit);

// Process service definitions for the entire tenant
var serviceDefList = [];

var stripCurlies = function(jsonString) {
    //Remove begining and trailing curly braces from JSON content so that content can 
    // be injected into the preexisting parent template JSON document 
	jsonString = String(jsonString);
    jsonString = jsonString.replace(/^\{/, "");
    jsonString = jsonString.replace(/\}$/, "");
    return jsonString;
};

// Add current application record's data first
serviceDefList.push(stripCurlies(as3Definition));

// Add all other application definitions from this tenant into declaration
for (var i = 0; i < appList.length; i++) {
	gs.info("BITCH ASS NUMBER: " + appList[i].number);
    if (appList[i].number != number) {    
        serviceDefList.push(stripCurlies(appList[i].as3_definition));
    }
}
// Replace the Service Definition template expression
serviceDefString = serviceDefList.toString();
var re = new RegExp("{{\w*serviceDefinitions\w*}}");
as3Declaration = as3Declaration.replace(re, serviceDefString);

// Verify and cleanup declaration JSON.  
try {
	jsonData = JSON.parse(as3Declaration);
	as3Declaration = JSON.stringify(jsonData);
} catch (e) {
	gs.info("AS3 Declaration JSON validation failed: " + e);
}

gs.info(as3Declaration);]]></script>
        <sys_class_name>sysauto_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-11-07 17:09:31</sys_created_on>
        <sys_id>4c2194073761230040a1ae7873990e95</sys_id>
        <sys_mod_count>77</sys_mod_count>
        <sys_name>test_server_script</sys_name>
        <sys_package display_value="F5_AS3" source="x_209235_f5_as3">00ecd5513701230040a1ae7873990e4e</sys_package>
        <sys_policy/>
        <sys_scope display_value="F5_AS3">00ecd5513701230040a1ae7873990e4e</sys_scope>
        <sys_update_name>sysauto_script_4c2194073761230040a1ae7873990e95</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-01-07 21:45:45</sys_updated_on>
        <upgrade_safe>false</upgrade_safe>
    </sysauto_script>
</record_update>
